[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Payment Terms Template",
  "enabled": 1,
  "modified": "2023-01-12 13:30:12.371431",
  "module": null,
  "name": "Modelo de Termos de Pagamento",
  "script": "frappe.ui.form.on(\"Payment Terms Template\", {\n    validate(frm){\n        frm.set_value(\"allocate_payment_based_on_payment_terms\", 1);\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 0,
  "modified": "2023-02-15 08:07:43.794080",
  "module": null,
  "name": "Atualiza\u00e7\u00e3o de Status autom\u00e1tico do Pedido de Venda para fechado",
  "script": "frappe.ui.form.on(\"Sales Invoice\", {\n  on_submit: function(frm) {\n    console.log(\"frm.doc.reference_name: \" + frm.doc.reference_name);\n    // Recupera o valor total da fatura de venda\n    var invoice_total = frm.doc.base_total;\n\n    // Recupera o valor total do pedido de venda correspondente\n    var orders = frappe.db.get_list(\"Sales Order\", { filters: { reference_name: frm.doc.reference_name } });\n\n    var order_total = 0;\n    if (orders.length > 0) {\n      order_total = orders[0].base_total;\n    }\n\n    console.log(\"order_total: \" + order_total);\n    // Compare os valores para ver se eles s\u00e3o iguais\n    if (invoice_total === order_total) {\n      // Se os valores forem iguais, use a fun\u00e7\u00e3o frappe.set_value para definir o estado do pedido como conclu\u00eddo\n      frappe.model.set_value(\"Sales Order\", frm.doc.reference_name, \"status\", \"Closed\");\n      frappe.model.set_value(\"Sales Order\", frm.doc.reference_name, \"per_delivered\", 100);\n    }\n  }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2023-01-26 14:19:27.985436",
  "module": null,
  "name": "CNPJ",
  "script": "frappe.ui.form.on('Customer', {\n    onload: function(frm) {\n        (async () => {\n            const response = await fetch(\"https://unpkg.com/imask\");\n            const scriptText = await response.text();\n            const script = document.createElement(\"script\");\n            script.text = scriptText;\n            document.head.appendChild(script);\n            const tipoDocumento = frm.fields_dict['cnpj_cpf'].$input[0];\n            const numeroDocumento = frm.fields_dict['cnpj'].$input[0];\n            let mask = null;\n            numeroDocumento.setAttribute(\"maxlength\", 18);\n            mask = IMask(numeroDocumento, {\n                mask: '00.000.000/0000-00'\n            });\n            tipoDocumento.addEventListener(\"change\", function() {\n                if (mask) {\n                    mask.destroy();\n                }\n                if (this.value === \"CPF\") {\n                    numeroDocumento.value = \"\";\n                    numeroDocumento.setAttribute(\"maxlength\", 14);\n                    mask = IMask(numeroDocumento, {\n                        mask: '000.000.000-00'\n                    });\n                } else if (this.value === \"CNPJ\") {\n                    numeroDocumento.value = \"\";\n                    numeroDocumento.setAttribute(\"maxlength\", 18);\n                    mask = IMask(numeroDocumento, {\n                        mask: '00.000.000/0000-00'\n                    });\n                }\n            });\n        })();\n    }\n});\n\nfrappe.ui.form.on(\"Customer\", \"cnpj\", function(frm) {\n    frappe.call({\n        method: 'ordem_servico.api.get_cnpj',\n        args: {\n            'cnpj': frm.doc.cnpj,\n        },\n        callback: function(r) {\n            // code snippet\n            debugger;\n            Object.keys(r.message).forEach(key => frm.set_value(key, r.message[key]));\n        }\n    });\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2022-12-20 09:30:50.738687",
  "module": null,
  "name": "Quotation images",
  "script": "frappe.ui.form.on(\"Quotation\", {\n    validate(frm){\n\tif (frm.doc.defeito_constatado && frm.doc.defeito_constatado.length){\n         frm.set_value(\"defeito_constatado\", frm.doc.defeito_constatado.replaceAll(\"img src=\", 'img style=\"max-width:150px; max-height:150px; width: auto; height: auto;\" src='));\n    }\n}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2022-12-20 09:30:44.872901",
  "module": null,
  "name": "Update Stock",
  "script": "frappe.ui.form.on(\"Sales Invoice\", {\n    validate(frm){\n        frm.set_value(\"update_stock\", 1);\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Address",
  "enabled": 1,
  "modified": "2022-12-20 09:30:39.227439",
  "module": null,
  "name": "CEP",
  "script": "frappe.ui.form.on(\"Address\", \"cep\", function (frm) { \n    if (!frm.doc.cep) \n    return; \nfrappe.call({ \n    method: 'ordem_servico.api.get_cep',\n    args: {\n\t   'cep': frm.doc.cep,\n    \t}, \n    callback: function(r) {\n        // code snippet\n\tdebugger;\n\tObject.keys(r.message).forEach(key => frm.set_value(key, r.message[key]));\n    } \n    }); \n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Opportunity",
  "enabled": 1,
  "modified": "2023-02-15 08:08:57.307199",
  "module": null,
  "name": "Ocultar eventos em oportunidade CRM",
  "script": "frappe.ui.form.on(\"Opportunity\", {\n  refresh: function(frm) {\n    setTimeout(function() {\n      // c\u00f3digo para esconder elementos na p\u00e1gina\n      $('div.open-events.pl-1').hide();\n      $('#opportunity-activities_tab > div:nth-child(1) > div > div > form > div > div > div.new-btn.pb-3 > span > button.btn.btn-sm.small.new-event-btn').hide();\n      $('#opportunity-activities_tab > div:nth-child(1) > div > div > form > div.frappe-control.form-group > div').hide();\n      $(document).ajaxComplete(function() {\n        // c\u00f3digo para esconder elementos na p\u00e1gina\n        $('div.open-events.pl-1').hide();\n        $('#opportunity-activities_tab > div:nth-child(1) > div > div > form > div > div > div.new-btn.pb-3 > span > button.btn.btn-sm.small.new-event-btn').hide();\n        $('#opportunity-activities_tab > div:nth-child(1) > div > div > form > div.frappe-control.form-group > div').hide();\n      });\n    },50);\n  }\n});\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Opportunity",
  "enabled": 1,
  "modified": "2023-02-10 15:09:25.330246",
  "module": null,
  "name": "Realtime",
  "script": "frappe.realtime.on(\"doc_update\", data => {\n    if (data.doctype == cur_frm.doctype && data.name == cur_frm.docname) {\n        cur_frm.reload_doc();\n        console.log(\"Recarregando....\")\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2023-02-23 08:52:48.773311",
  "module": null,
  "name": "Valida\u00e7\u00e3o cep e numero",
  "script": "frappe.ui.form.on('Quotation', {\n    validate: function(frm) {\n        console.log(\"validate\")\n        // Obter o link do endere\u00e7o selecionado na cota\u00e7\u00e3o\n        var customer_address = frm.doc.customer_address;\n\n        if (!customer_address) {\n            return;\n        }\n\n        // Buscar o endere\u00e7o correspondente\n        frappe.call({\n            method: \"frappe.client.get\",\n            args: {\n                doctype: \"Address\",\n                name: customer_address\n            },\n            callback: function(r) {\n                var endereco = r.message;\n\n                if (endereco && (!endereco.cep || !endereco.numero)) {\n                    frappe.msgprint({\n                        title: __('Endere\u00e7o incompleto'),\n                        message: __('Por favor, preencha o CEP e o n\u00famero do endere\u00e7o antes de salvar.'),\n                        indicator: 'orange'\n                    });\n                    frappe.validated = false;\n                } else {\n                    frappe.validated = true;\n                }\n            }\n        });\n    }\n});\n\n// Adicionar um gatilho para verificar os campos novamente ao alterar o endere\u00e7o\nfrappe.ui.form.on('Quotation', 'customer_address', function(frm) {\n    frm.trigger('validate');\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Ordem Servico Interna",
  "enabled": 1,
  "modified": "2023-03-08 16:38:33.478777",
  "module": null,
  "name": "Data Ordem Interna",
  "script": "frappe.ui.form.on('Ordem Servico Interna', {\n    onload: function(frm) {\n        if (!frm.doc.tempo_inicio_recebimento) {\n            const now = frappe.datetime.now_datetime();\n            const formatted_date = frappe.datetime.str_to_user(now).replace(\" \",\" \");\n            frm.set_value(\"tempo_inicio_recebimento\", formatted_date);\n            frm.set_df_property(\"tempo_inicio_recebimento\", \"read_only\", 1);\n        }\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Ordem Servico Interna",
  "enabled": 1,
  "modified": "2023-03-13 16:33:20.251859",
  "module": null,
  "name": "Definir obriga\u00e7\u00e3o nos campos de agendamento",
  "script": "frappe.ui.form.on('Ordem Servico Interna', {\n    refresh: function(frm) {\n    if (frm.doc.customer && frm.doc.contact_link && frm.doc.desc_item_nf && frm.doc.qtd_nf && frm.doc.cfop && frm.doc.ncm && frm.doc.serie_number && frm.doc.equipment_model && frm.doc.equipment_tag && frm.doc.equipment_description && frm.doc.tipo_servico != \"\")\n    frm.set_df_property('initial_scheduled_to', 'reqd', 1);\n    /*frm.set_df_property('quotation_schedule_date', 'reqd', 1);\n    frm.set_df_property('quotation_time', 'reqd', 1);*/\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Ordem Servico Interna",
  "enabled": 1,
  "modified": "2023-03-13 16:33:44.311274",
  "module": null,
  "name": "Incluir obriga\u00e7\u00e3o de Data de agendamento Ordem Servi\u00e7o",
  "script": "frappe.ui.form.on('Ordem Servico Interna', {\n    refresh: function(frm) {\n    if (frm.doc.customer && frm.doc.contact_link && frm.doc.desc_item_nf && frm.doc.qtd_nf && frm.doc.cfop && frm.doc.ncm && frm.doc.serie_number && frm.doc.equipment_model && frm.doc.equipment_tag && frm.doc.equipment_description && frm.doc.tipo_servico != \"\")\n    /*frm.set_df_property('initial_scheduled_to', 'reqd', 1);*/\n    frm.set_df_property('quotation_schedule_date', 'reqd', 1);\n    /*frm.set_df_property('quotation_time', 'reqd', 1);*/\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Ordem Servico Interna",
  "enabled": 0,
  "modified": "2023-03-10 13:39:09.825025",
  "module": null,
  "name": "Incluir Obriga\u00e7\u00e3o de tempo de agendamento no Doctype Ordem de Servi\u00e7o Interna",
  "script": "frappe.ui.form.on('Ordem Servico Interna', {\n    refresh: function(frm) {\n    if (frm.doc.customer && frm.doc.contact_link && frm.doc.nat_operacao && frm.doc.cfop && frm.doc.ncm && frm.doc.serie_number && frm.doc.equipment_model && frm.doc.equipment_tag && frm.doc.equipment_description && frm.doc.tipo_servico != \"\"){\n    frm.set_df_property('quotation_time', 'reqd', 1);\n    }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Ordem Servico Interna",
  "enabled": 0,
  "modified": "2023-03-14 07:58:16.280366",
  "module": null,
  "name": "Status Ordem Servi\u00e7o - Somente Leitura",
  "script": "frappe.ui.form.on('Ordem Servico Interna', {\n    refresh: function(frm) {\n    if (frm.doc.customer || frm.doc.contact_link || frm.doc.desc_item_nf || frm.doc.qtd_nf || frm.doc.cfop || frm.doc.ncm || frm.doc.serie_number || frm.doc.equipment_model || frm.doc.equipment_tag || frm.doc.equipment_description || frm.doc.tipo_servico == \"\"){\n    /*frm.set_df_property('initial_scheduled_to', 'reqd', 1);*/\n    frm.doc.status_order_service = \"Em Recebimento\"\n    frm.set_df_property('status_order_service', 'read_only', 1);\n    /*frm.set_df_property('quotation_time', 'reqd', 1);*/\n    }\n   \n}});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Ordem Servico Interna",
  "enabled": 0,
  "modified": "2023-03-14 07:53:00.843282",
  "module": null,
  "name": "Remover somente leitura status == \"Aguardando Or\u00e7amento\" Ordem Servico Interna",
  "script": "frappe.ui.form.on('Ordem Servico Interna', {\n\trefresh(frm) {\n\tif(frm.doc.status_order_service == \"Aguardando Or\u00e7amento\"){\n    frm.set_df_property('status_order_service', 'read_only', 0);\n    \n    }\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2023-06-26 14:18:55.233679",
  "module": null,
  "name": "Valida\u00e7\u00e3o incluir cep em Endere\u00e7o em Cliente",
  "script": "frappe.ui.form.on('Customer', {\n    validate: function(frm) {\n        console.log(\"validate\")\n        // Obter o link do endere\u00e7o principal do cliente selecionado na cota\u00e7\u00e3o\n        var customer_primary_address = frm.doc.customer_primary_address;\n\n        if (!customer_primary_address) {\n            return;\n        }\n\n        // Buscar o endere\u00e7o correspondente\n        frappe.call({\n            method: \"frappe.client.get\",\n            args: {\n                doctype: \"Address\",\n                name: customer_primary_address\n            },\n            callback: function(r) {\n                var endereco = r.message;\n\n                if (endereco && (!endereco.cep || !endereco.numero)) {\n                    frappe.msgprint({\n                        title: __('Endere\u00e7o incompleto'),\n                        message: __('Por favor, preencha o CEP e o n\u00famero no campo de \"Endere\u00e7o Principal do Cliente\" antes de salvar.'),\n                        indicator: 'orange'\n                    });\n                    frappe.validated = false;\n                } else {\n                    frappe.validated = true;\n                }\n            }\n        });\n    }\n});\n\n// Adicionar um gatilho para verificar os campos novamente ao alterar o endere\u00e7o\nfrappe.ui.form.on('Customer', 'customer_primary_address', function(frm) {\n    frm.trigger('validate');\n});\n",
  "view": "Form"
 }
]